/**
 * Generated by orval v6.12.0 🍺
 * Do not edit manually.
 * VerdanTech-API
 * API of the VerdanTech Project Web Application
 * OpenAPI spec version: 0.1.0
 */
import { rest } from 'msw';
import { faker } from '@faker-js/faker';

export const getAuthCsrfRetrieveMock = () => ({ csrftoken: faker.random.word() });

export const getAuthLoginCreateMock = () => ({
	email: faker.internet.email(),
	password: faker.random.word()
});

export const getAuthMSW = () => [
	rest.get('*/auth/csrf', (_req, res, ctx) => {
		return res(
			ctx.delay(1000),
			ctx.status(200, 'Mocked status'),
			ctx.json(getAuthCsrfRetrieveMock())
		);
	}),
	rest.post('*/auth/login', (_req, res, ctx) => {
		return res(
			ctx.delay(1000),
			ctx.status(200, 'Mocked status'),
			ctx.json(getAuthLoginCreateMock())
		);
	}),
	rest.post('*/auth/logout', (_req, res, ctx) => {
		return res(ctx.delay(1000), ctx.status(200, 'Mocked status'));
	})
];
