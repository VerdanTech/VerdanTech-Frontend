components:
  schemas:
    EmailSchema:
      properties:
        address:
          type: string
        primary:
          type: boolean
        verified:
          type: boolean
      required:
        - address
        - primary
        - verified
      title: EmailSchema
      type: object
    EnvironmentAttributeCluster:
      properties:
        frost_date_profile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/FrostDateProfile'
        geo_coordinate_profile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/GeoCoordinateProfile'
      required: []
      title: EnvironmentAttributeCluster
      type: object
    EnvironmentAttributeClusterInput:
      properties:
        profiles:
          items:
            oneOf:
              - $ref: '#/components/schemas/FrostDateProfile'
              - $ref: '#/components/schemas/GeoCoordinateProfile'
          type: array
      required:
        - profiles
      title: EnvironmentAttributeClusterInput
      type: object
    FrostDateProfile:
      properties:
        first_frost_date:
          format: date
          type: string
        last_frost_date:
          format: date
          type: string
      required:
        - first_frost_date
        - last_frost_date
      title: FrostDateProfile
      type: object
    GardenCreateInput:
      properties:
        admin_usernames:
          items:
            type: string
          type: array
        description:
          type: string
        editor_usernames:
          items:
            type: string
          type: array
        name:
          type: string
        viewer_usernames:
          items:
            type: string
          type: array
        visibility:
          enum:
            - private
            - unlisted
            - public
          type: string
      required:
        - name
      title: GardenCreateInput
      type: object
    GardenFullSchema:
      properties:
        attributes:
          $ref: '#/components/schemas/EnvironmentAttributeCluster'
        creator:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/UserPublicSchema'
        description:
          type: string
        id:
          description: Any UUID string
          format: uuid
          type: string
        key:
          type: string
        memberships:
          items:
            $ref: '#/components/schemas/GardenMembershipPublicSchema'
          type: array
        name:
          type: string
        num_memberships:
          type: integer
        visibility:
          enum:
            - private
            - unlisted
            - public
          type: string
      required:
        - attributes
        - description
        - id
        - key
        - memberships
        - name
        - num_memberships
        - visibility
      title: GardenFullSchema
      type: object
    GardenInviteCreateInput:
      properties:
        garden_key:
          type: string
        role:
          enum:
            - admin
            - editor
            - viewer
          type: string
        user_username:
          type: string
      required:
        - garden_key
        - role
        - user_username
      title: GardenInviteCreateInput
      type: object
    GardenMembershipFullSchema:
      properties:
        created_at:
          format: date-time
          type: string
        favorite:
          type: boolean
        garden_ref:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/GardenRef'
        inviter:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/UserPublicSchema'
        open_invite:
          type: boolean
        role:
          enum:
            - admin
            - editor
            - viewer
          type: string
        user:
          $ref: '#/components/schemas/UserPublicSchema'
      required:
        - created_at
        - favorite
        - open_invite
        - role
        - user
      title: GardenMembershipFullSchema
      type: object
    GardenMembershipPublicSchema:
      properties:
        created_at:
          format: date-time
          type: string
        garden_ref:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/GardenRef'
        role:
          enum:
            - admin
            - editor
            - viewer
          type: string
        user:
          $ref: '#/components/schemas/UserPublicSchema'
      required:
        - created_at
        - role
        - user
      title: GardenMembershipPublicSchema
      type: object
    GardenRef:
      properties:
        id:
          description: Any UUID string
          format: uuid
          type: string
        key:
          type: string
      required:
        - id
        - key
      title: GardenRef
      type: object
    GardenRevokeMembershipInput:
      properties:
        garden_key:
          type: string
        user_username:
          type: string
      required:
        - garden_key
        - user_username
      title: GardenRevokeMembershipInput
      type: object
    GardenRoleChangeInput:
      properties:
        garden_key:
          type: string
        role:
          enum:
            - admin
            - editor
            - viewer
          type: string
        user_username:
          type: string
      required:
        - garden_key
        - role
        - user_username
      title: GardenRoleChangeInput
      type: object
    GeoCoordinateProfile:
      properties:
        lat:
          type: number
        long:
          type: number
      required:
        - lat
        - long
      title: GeoCoordinateProfile
      type: object
    UserCreateInput:
      properties:
        email_address:
          type: string
        password1:
          type: string
        password2:
          type: string
        username:
          type: string
      required:
        - email_address
        - password1
        - password2
        - username
      title: UserCreateInput
      type: object
    UserFullSchema:
      properties:
        created_at:
          oneOf:
            - type: 'null'
            - format: date-time
              type: string
        emails:
          items:
            $ref: '#/components/schemas/EmailSchema'
          type: array
        id:
          description: Any UUID string
          format: uuid
          type: string
        is_superuser:
          type: boolean
        username:
          type: string
      required:
        - emails
        - id
        - is_superuser
        - username
      title: UserFullSchema
      type: object
    UserLoginInput:
      properties:
        email_address:
          type: string
        password:
          type: string
      required:
        - email_address
        - password
      title: UserLoginInput
      type: object
    UserPasswordResetConfirmInput:
      properties:
        key:
          type: string
        new_password1:
          type: string
        new_password2:
          type: string
        user_id: {}
      required:
        - key
        - new_password1
        - new_password2
        - user_id
      title: UserPasswordResetConfirmInput
      type: object
    UserPasswordResetRequestInput:
      properties:
        email_address:
          type: string
      required:
        - email_address
      title: UserPasswordResetRequestInput
      type: object
    UserPublicSchema:
      properties:
        id:
          description: Any UUID string
          format: uuid
          type: string
        username:
          type: string
      required:
        - id
        - username
      title: UserPublicSchema
      type: object
    UserVerifyEmailConfirmInput:
      properties:
        key:
          type: string
      required:
        - key
      title: UserVerifyEmailConfirmInput
      type: object
    UserVerifyEmailRequestInput:
      properties:
        email_address:
          type: string
      required:
        - email_address
      title: UserVerifyEmailRequestInput
      type: object
  securitySchemes:
    BearerToken:
      bearerFormat: JWT
      description: JWT cookie-based authentication and authorization.
      in: cookie
      name: token
      scheme: Bearer
      type: http
externalDocs:
  description: Github Repository
  url: https://github.com/VerdanTech/VerdanTech-Backend
info:
  contact:
    name: Nathaniel King
  description: Backend API of the VerdanTech software project.
  license:
    name: GNU GPL v3.0
  title: VerdanTech-Backend
  version: 0.1.0
openapi: 3.1.0
paths:
  /vdtapi/gardens/attributes/set:
    post:
      deprecated: false
      description: Sets environmental attributes on a Garden.
      operationId: garden_attributes_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAttributeClusterInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenFullSchema'
          description: The full newly updated garden object.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Garden environment attributes set.
      tags:
        - gardens
  /vdtapi/gardens/membership/accept_invite:
    post:
      deprecated: false
      description: Accepts a Garden Membership.
      operationId: garden_accept_invite
      parameters:
        - allowEmptyValue: false
          allowReserved: false
          deprecated: false
          in: query
          name: garden_key
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenMembershipFullSchema'
          description: The full newly accepted garden membership object
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Garden membership invitiation acceptance.
      tags:
        - gardens
  /vdtapi/gardens/membership/change:
    post:
      deprecated: false
      description: Changes the role on another's Garden Membership.
      operationId: garden_change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenRoleChangeInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenMembershipFullSchema'
          description: The full newly changed Garden Membership object.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Garden Membership role change.
      tags:
        - gardens
  /vdtapi/gardens/membership/invite:
    post:
      deprecated: false
      description: Creates a new Garden Membership and sends an email confirmation
        email.
      operationId: garden_invite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenInviteCreateInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenMembershipFullSchema'
          description: The full newly created garden membership object
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Garden membership invitiation.
      tags:
        - gardens
  /vdtapi/gardens/membership/leave:
    post:
      deprecated: false
      description: Removes own Garden Membership from a garden.
      operationId: garden_leave
      parameters:
        - allowEmptyValue: false
          allowReserved: false
          deprecated: false
          in: query
          name: garden_key
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: Membership with Garden has been removed.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Garden membership .
      tags:
        - gardens
  /vdtapi/gardens/membership/revoke:
    post:
      deprecated: false
      description: Removes another's Garden Membership from a garden.
      operationId: garden_revoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenRevokeMembershipInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: Membership with Garden has been removed.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Removes a user from a garden.
      tags:
        - gardens
  /vdtapi/gardens/write/create:
    post:
      deprecated: false
      description: Creates a new Garden and invites requested users.
      operationId: garden_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenCreateInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenFullSchema'
          description: The full newly created garden object
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Garden creation.
      tags:
        - gardens
  /vdtapi/users/auth/login:
    post:
      deprecated: false
      description: Authenticate the request with JWT cookie authentication.
      operationId: user_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullSchema'
          description: The authenticated user schema
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: User login
      tags:
        - users
  /vdtapi/users/read/{user_ids}/profile:
    get:
      deprecated: false
      description: Returns the profiles of the user ids given. Returns an error if
        a user does not exist. If no user ids are provided, the client's profile is
        returned.
      operationId: user_profiles
      parameters:
        - allowEmptyValue: false
          allowReserved: false
          deprecated: false
          in: path
          name: user_ids
          required: true
          schema:
            oneOf:
              - type: 'null'
              - items:
                  description: Any UUID string
                  format: uuid
                  type: string
                type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - items:
                      $ref: '#/components/schemas/UserPublicSchema'
                    type: array
                  - $ref: '#/components/schemas/UserFullSchema'
          description: The list of users requested, or the client user.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: User profiles view.
      tags:
        - users
  /vdtapi/users/verification/email/verification_confirm:
    post:
      deprecated: false
      description: Closes an email confirmation and verifies the email address.
      operationId: user_email_confirmation_confirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserVerifyEmailConfirmInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: The email has been verified.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
        '422':
          content:
            application/json:
              schema:
                description: Client Error
                examples:
                  ClientError:
                    value:
                      detail: Unprocessable Entity
                      extra: {}
                      status_code: 422
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: ''
      summary: Email confirmation.
      tags:
        - users
  /vdtapi/users/verification/email/verification_request:
    post:
      deprecated: false
      description: Requests a new email verification email be sent to the email address.
      operationId: user_email_verification_request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserVerifyEmailRequestInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: An email confirmation has been sent to the address.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
        '422':
          content:
            application/json:
              schema:
                description: Client Error
                examples:
                  ClientError:
                    value:
                      detail: Unprocessable Entity
                      extra: {}
                      status_code: 422
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: ''
      summary: Email confirmation request.
      tags:
        - users
  /vdtapi/users/verification/password/confirm:
    post:
      deprecated: false
      description: Closes a password reset request and changes the password
      operationId: user_password_reset_confirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordResetConfirmInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: The password has been successfully updated.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Password reset confirm.
      tags:
        - users
  /vdtapi/users/verification/password/request:
    post:
      deprecated: false
      description: Open a new password reset request and sends confirmation email.
      operationId: user_password_reset_request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordResetRequestInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: A password reset confirmation has been sent to the email address,
            if it exists.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: Password reset request.
      tags:
        - users
  /vdtapi/users/write/create:
    post:
      deprecated: false
      description: 'Registers a new user. Requires email confirmation: False.'
      operationId: user_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateInput'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullSchema'
          description: The full newly created user object
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      detail: Bad Request
                      extra: {}
                      status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    anyOf:
                      - type: 'null'
                      - type: object
                      - items: {}
                        type: array
                  status_code:
                    type: integer
                required:
                  - detail
                  - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: User registration.
      tags:
        - users
security:
  - BearerToken: []
servers:
  - url: /
tags:
  - name: users
  - name: gardens
