openapi: 3.0.3
info:
  title: VerdanTech-API
  version: 0.1.0
  description: API of the VerdanTech Project Web Application
paths:
  /accounts/password/change:
    post:
      operationId: accounts_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
        - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /accounts/password/reset:
    post:
      operationId: accounts_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
        - cookieAuth: []
        - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
  /accounts/password/reset/confirm:
    post:
      operationId: accounts_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
        - cookieAuth: []
        - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /accounts/registration:
    post:
      operationId: accounts_registration_create
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      security:
        - cookieAuth: []
        - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /accounts/registration/resend_email:
    post:
      operationId: accounts_registration_resend_email_create
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
        required: true
      security:
        - cookieAuth: []
        - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailVerification'
          description: ''
  /accounts/registration/verify_email:
    post:
      operationId: accounts_registration_verify_email_create
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
        - cookieAuth: []
        - {}
      responses:
        '200':
          description: No response body
  /auth/csrf:
    get:
      operationId: auth_csrf_retrieve
      description: Returns valid CSRF token
      tags:
        - auth
      security:
        - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRFToken'
          description: ''
  /auth/login:
    post:
      operationId: auth_login_create
      description: |-
        Login using Session authentication.
        Requires CSRF token to prevent login-csrf,
        see: https://docs.djangoproject.com/en/4.1/ref/csrf/
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
        - cookieAuth: []
        - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /auth/logout:
    post:
      operationId: auth_logout_create
      description: Calls Django logout methods and deletes the sessionid assigned
        to the user object
      tags:
        - auth
      security:
        - cookieAuth: []
        - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    CSRFToken:
      type: object
      properties:
        csrftoken:
          type: string
      required:
        - csrftoken
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
        - email
        - password
    PasswordChangeRequest:
      type: object
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - new_password1
        - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
        - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
        - new_password1
        - new_password2
        - token
        - uid
    PasswordResetConfirmRequest:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
        - new_password1
        - new_password2
        - token
        - uid
    PasswordResetRequest:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
        - email
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
          minLength: 1
        email:
          type: string
          format: email
      required:
        - email
        - username
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 50
        email:
          type: string
          format: email
          minLength: 1
        password1:
          type: string
          writeOnly: true
          minLength: 1
        password2:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - email
        - password1
        - password2
        - username
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email
    ResendEmailVerificationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
        - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
        - detail
    VerifyEmailRequest:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - key
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
servers:
  - url: http://localhost:5173/api
tags:
  - name: authentication
  - name: accounts
