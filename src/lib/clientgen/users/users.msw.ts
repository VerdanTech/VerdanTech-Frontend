/**
 * Generated by orval v6.23.0 🍺
 * Do not edit manually.
 * VerdanTech-Backend
 * OpenAPI spec version: 0.1.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'

export const getVdtapiUsersWriteCreateUserCreateMock = () => ({created_at: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]), emails: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({address: faker.word.sample(), confirmation: faker.helpers.arrayElement([faker.helpers.arrayElement([{},{created_at: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]), key: faker.word.sample()}]), undefined]), primary: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), verified: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), verified_at: faker.helpers.arrayElement([faker.helpers.arrayElement([{},`${faker.date.past().toISOString().split('.')[0]}Z`]), undefined])})), undefined]), id: faker.helpers.arrayElement([faker.helpers.arrayElement([{},{}]), undefined]), is_superuser: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), username: faker.word.sample()})

export const getUsersMock = () => [
http.post('*/vdtapi/users/verification/email/verification_confirm', async () => {
        await delay(1000);
        return new HttpResponse(null,
          { 
            status: 200,
            headers: {
              'Content-Type': 'application/json',
            }
          }
        )
      }),http.post('*/vdtapi/users/verification/email/verification_request', async () => {
        await delay(1000);
        return new HttpResponse(null,
          { 
            status: 200,
            headers: {
              'Content-Type': 'application/json',
            }
          }
        )
      }),http.post('*/vdtapi/users/verification/password/confirm', async () => {
        await delay(1000);
        return new HttpResponse(null,
          { 
            status: 200,
            headers: {
              'Content-Type': 'application/json',
            }
          }
        )
      }),http.post('*/vdtapi/users/verification/password/request', async () => {
        await delay(1000);
        return new HttpResponse(null,
          { 
            status: 200,
            headers: {
              'Content-Type': 'application/json',
            }
          }
        )
      }),http.post('*/vdtapi/users/write/create', async () => {
        await delay(1000);
        return new HttpResponse(JSON.stringify(getVdtapiUsersWriteCreateUserCreateMock()),
          { 
            status: 200,
            headers: {
              'Content-Type': 'application/json',
            }
          }
        )
      }),]
