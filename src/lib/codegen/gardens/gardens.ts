/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * VerdanTech-Backend
 * Backend API of the VerdanTech software project.
 * OpenAPI spec version: 0.1.0
 */
import axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse } from 'axios';
import type {
	EnvironmentAttributeClusterInput,
	GardenAcceptInviteParams,
	GardenCreateInput,
	GardenFullSchema,
	GardenInviteCreateInput,
	GardenLeaveParams,
	GardenMembershipFullSchema,
	GardenRevokeMembershipInput,
	GardenRoleChangeInput
} from '../verdanTechBackend.schemas';

/**
 * Sets environmental attributes on a Garden.
 * @summary Garden environment attributes set.
 */
export const gardenAttributesSet = <TData = AxiosResponse<GardenFullSchema>>(
	environmentAttributeClusterInput: EnvironmentAttributeClusterInput,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/vdtapi/gardens/attributes/set`, environmentAttributeClusterInput, options);
};
/**
 * Accepts a Garden Membership.
 * @summary Garden membership invitiation acceptance.
 */
export const gardenAcceptInvite = <TData = AxiosResponse<GardenMembershipFullSchema>>(
	params: GardenAcceptInviteParams,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/vdtapi/gardens/membership/accept_invite`, undefined, {
		...options,
		params: { ...params, ...options?.params }
	});
};
/**
 * Changes the role on another's Garden Membership.
 * @summary Garden Membership role change.
 */
export const gardenChange = <TData = AxiosResponse<GardenMembershipFullSchema>>(
	gardenRoleChangeInput: GardenRoleChangeInput,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/vdtapi/gardens/membership/change`, gardenRoleChangeInput, options);
};
/**
 * Creates a new Garden Membership and sends an email confirmation email.
 * @summary Garden membership invitiation.
 */
export const gardenInvite = <TData = AxiosResponse<GardenMembershipFullSchema>>(
	gardenInviteCreateInput: GardenInviteCreateInput,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/vdtapi/gardens/membership/invite`, gardenInviteCreateInput, options);
};
/**
 * Removes own Garden Membership from a garden.
 * @summary Garden membership .
 */
export const gardenLeave = <TData = AxiosResponse<string>>(
	params: GardenLeaveParams,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/vdtapi/gardens/membership/leave`, undefined, {
		...options,
		params: { ...params, ...options?.params }
	});
};
/**
 * Removes another's Garden Membership from a garden.
 * @summary Removes a user from a garden.
 */
export const gardenRevoke = <TData = AxiosResponse<string>>(
	gardenRevokeMembershipInput: GardenRevokeMembershipInput,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/vdtapi/gardens/membership/revoke`, gardenRevokeMembershipInput, options);
};
/**
 * Creates a new Garden and invites requested users.
 * @summary Garden creation.
 */
export const gardenCreate = <TData = AxiosResponse<GardenFullSchema>>(
	gardenCreateInput: GardenCreateInput,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/vdtapi/gardens/write/create`, gardenCreateInput, options);
};
export type GardenAttributesSetResult = AxiosResponse<GardenFullSchema>;
export type GardenAcceptInviteResult = AxiosResponse<GardenMembershipFullSchema>;
export type GardenChangeResult = AxiosResponse<GardenMembershipFullSchema>;
export type GardenInviteResult = AxiosResponse<GardenMembershipFullSchema>;
export type GardenLeaveResult = AxiosResponse<string>;
export type GardenRevokeResult = AxiosResponse<string>;
export type GardenCreateResult = AxiosResponse<GardenFullSchema>;
